;#include <headers.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;//question2
;
;void DancingLight(unsigned int StartPoint,unsigned int timer){
; 0002 0005 void DancingLight(unsigned int StartPoint,unsigned int timer){

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0002 0006 
; 0002 0007     unsigned int i; //integer as counter
; 0002 0008     unsigned int j;
; 0002 0009     unsigned int num;
; 0002 000A     num=1;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;	StartPoint -> Y+8
;	timer -> Y+6
;	i -> R16,R17
;	j -> R18,R19
;	num -> R20,R21
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0002 000B     DDRB=0xFF;       // define port B as output
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0002 000C     timer /= 20;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0002 000D     for(j=0;j<StartPoint;j++){
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0002 000E         num=num*2;
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0002 000F     }
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0002 0010     for(i=0;i<20;i++)
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0002 0011     {
; 0002 0012        PORTB=num;      //turn on all portB
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0002 0013        delay_ms(timer);
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0002 0014        num = num * 2;    // turn on next LED
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0002 0015        if (num > 128){    //if last on in ON back to the beginig
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0002 0016         num= 1;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0002 0017        }
; 0002 0018     }
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0002 0019 }
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
