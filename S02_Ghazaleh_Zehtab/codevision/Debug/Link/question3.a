;#include <headers.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;void DiplayPortx_onLEDs(unsigned int inport, unsigned int outport){
; 0003 0003 void DiplayPortx_onLEDs(unsigned int inport, unsigned int outport){

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0003 0004 
; 0003 0005     unsigned int Myinport=0;
; 0003 0006     unsigned int p=0;
; 0003 0007     switch(inport){
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;	inport -> Y+6
;	outport -> Y+4
;	Myinport -> R16,R17
;	p -> R18,R19
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0003 0008 
; 0003 0009         case 0:
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0003 000A             DDRA=0x00;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0003 000B             Myinport = PINA;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0003 000C             break;
;PCODE: $0000001D VOL: 0
; 0003 000D 
; 0003 000E         case 1:
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0003 000F 
; 0003 0010             DDRB=0x00;       // define port B as input
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0003 0011             Myinport = PINB;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0003 0012             break;
;PCODE: $00000026 VOL: 0
; 0003 0013 
; 0003 0014         case 2:
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0003 0015             DDRC=0x00;       // define port C as output
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0003 0016             Myinport = PINC;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0003 0017             break;
;PCODE: $0000002F VOL: 0
; 0003 0018 
; 0003 0019         case 3:
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0003 001A             DDRD=0x00;       // define port D as output
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0003 001B             Myinport = PIND;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0003 001C             break;
;PCODE: $00000038 VOL: 0
; 0003 001D         default:
;PCODE: $00000039 VOL: 0
; 0003 001E 
; 0003 001F             DDRB=0x00;       // define port B as output
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0003 0020             Myinport=PINB;
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0003 0021             break;
;PCODE: $0000003F VOL: 0
; 0003 0022     }
;PCODE: $00000040 VOL: 0
; 0003 0023     switch(outport){
;PCODE: $00000041 VOL: 0
; 0003 0024 
; 0003 0025         case 0:
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0003 0026             DDRA=0xFF;
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0003 0027             while(p<3000){
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0003 0028                 PORTA=Myinport;
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0003 0029                 p++;
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0003 002A                 delay_ms(1);
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0003 002B             }
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0003 002C             p=0;
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0003 002D             break;
;PCODE: $00000055 VOL: 0
; 0003 002E         case 1:
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0003 002F             DDRB=0xFF;
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0003 0030             while(p<3000){
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0003 0031                 PORTB=Myinport;
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0003 0032                 p++;
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0003 0033                 delay_ms(1);
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0003 0034             }
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0003 0035             break;
;PCODE: $00000068 VOL: 0
; 0003 0036         case 2:
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0003 0037             DDRC=0xFF;
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0003 0038             while(p<3000){
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0003 0039                 PORTC=Myinport;
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0003 003A                 p++;
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0003 003B                 delay_ms(1);
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0003 003C             }
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0003 003D             break;
;PCODE: $0000007B VOL: 0
; 0003 003E         case 3:
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0003 003F             DDRD=0xFF;
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0003 0040             while(p<3000){
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0003 0041                 PORTD=Myinport;
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0003 0042                 p++;
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0003 0043                 delay_ms(1);
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0003 0044             }
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0003 0045             break;
;PCODE: $0000008E VOL: 0
; 0003 0046         default:
;PCODE: $0000008F VOL: 0
; 0003 0047             DDRB=0xFF;
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0003 0048             while(p<3000){
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
; 0003 0049                 PORTB=Myinport;
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0003 004A                 p++;
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0003 004B                 delay_ms(1);
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0003 004C             }
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0003 004D             break;
;PCODE: $0000009F VOL: 0
; 0003 004E     }
;PCODE: $000000A0 VOL: 0
; 0003 004F }
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
