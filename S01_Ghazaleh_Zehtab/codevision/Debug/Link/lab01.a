;/*
; * lab01.c
; *
; * Created: 10/1/2020 1:32:13 PM
; * Author: Ghazaleh Zehtab
; */
;
;#include <io.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;
;unsigned char sevenseg[]=
;    {
;
;        0b00111111,  //0
;        0b00000110,  //1
;        0b01011011,  //2
;        0b01001111, //3
;        0b01100110, //4
;        0b01101101, //5
;        0b01111101, //6
;        0b0000111,  //7
;        0b01111111, //8
;        0b01101111 //9
;
;    } ;

	.DSEG
;
;//question 1
;void AllLedON_4Times(void){
; 0000 001D void AllLedON_4Times(void){

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 001E 
; 0000 001F     unsigned int i; //integer as counter
; 0000 0020     DDRB=0xFF;       // define port B as output
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;	i -> R16,R17
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 0021     for(i=0;i<4;i++)
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0022     {
; 0000 0023        PORTB=0xFF;      //turn on all portB
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0024        delay_ms(500);  //delay
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0025        PORTB=0x00;     //turn off the portB
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0026        delay_ms(500);
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0027     }
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0028 }
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;//question 2
;void DancingLight(void){
; 0000 002A void DancingLight(void){
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 002B 
; 0000 002C     unsigned int i; //integer as counter
; 0000 002D     unsigned int num;
; 0000 002E     num=1;
;PCODE: $0000002E VOL: 0
;	i -> R16,R17
;	num -> R18,R19
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 002F     DDRB=0xFF;       // define port B as output
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0030     for(i=0;i<20;i++)
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0031     {
; 0000 0032        PORTB=num;      //turn on all portB
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 0033        delay_ms(150);
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0034        num = num * 2;    // turn on next LED
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 0035        if (num > 128){    //if last on in ON back to the beginig
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0036         num= 1;
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0037        }
; 0000 0038     }
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 0039 }
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;//question 3
;void DiplayPortA_onLEDs(void){
; 0000 003B void DiplayPortA_onLEDs(void){
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 003C     unsigned int i=0;
; 0000 003D     DDRA=0x00;
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;	i -> R16,R17
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 003E     DDRB=0xFF;
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 003F     while(i<3000){
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 0040         PORTB=PINA;
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 0041         i++;
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 0042         delay_ms(1);
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 0043     }
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 0044 }
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;//question 4
;void NineToZero(void){
; 0000 0046 void NineToZero(void){
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 0047     DDRC=0xFF;
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 0048     DDRD=0x0F;
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 0049     DDRD.0=1;
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 004A     DDRD.1=1;
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0000 004B     DDRD.2=1;
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 004C     DDRD.3=1;
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 004D     PORTC=0b01101111; //9
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0000 004E     delay_ms(500);
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 004F     PORTC=0b01111111;    //8
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0000 0050     delay_ms(500);
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0000 0051     PORTC=0b0000111;   //7
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 0052     delay_ms(500);
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 0053     PORTC=0b01111101;   //6
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 0054     delay_ms(500);
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 0055     PORTC=0b01101101;    //5
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 0056     delay_ms(500);
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 0057     PORTC=0b01100110;   //4
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 0058     delay_ms(500);
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 0059     PORTC=0b01001111;   //3
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 005A     delay_ms(500);
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 005B     PORTC=0b01011011;    //2
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 005C     delay_ms(500);
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0000 005D     PORTC=0b00000110;    //1
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 005E     delay_ms(500);
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0000 005F     PORTC=0b00111111;    //0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 0060     delay_ms(500);
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0000 0061 
; 0000 0062 
; 0000 0063 }
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;// question 5
;
;void Reduce(void){
; 0000 0066 void Reduce(void){
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0000 0067 
; 0000 0068     unsigned int number=0;
; 0000 0069     unsigned int numberCopy=0;
; 0000 006A     unsigned int FirstDigit=0;
; 0000 006B     unsigned int SecondDigit=0;
; 0000 006C     unsigned int ThirdDigit=0;
; 0000 006D     unsigned int Deci=0;        // after point
; 0000 006E     DDRA=0x00;
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;	number -> R16,R17
;	numberCopy -> R18,R19
;	FirstDigit -> R20,R21
;	SecondDigit -> Y+10
;	ThirdDigit -> Y+8
;	Deci -> Y+6
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
; 0000 006F     DDRC=0xFF;
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
; 0000 0070     DDRD=0x00;
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
; 0000 0071     number= PINA;
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0000 0072     numberCopy = number  *10;   //FOR making decimal easier
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
; 0000 0073     while(numberCopy>0){
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
; 0000 0074         delay_ms(50);
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
; 0000 0075         number=numberCopy;
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
; 0000 0076         Deci=number%10;
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
; 0000 0077         number= number /10;
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
; 0000 0078         FirstDigit=number%10;
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
; 0000 0079         number= number /10;
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
; 0000 007A         SecondDigit = number %10;
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
; 0000 007B         number= number /10;
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
; 0000 007C         ThirdDigit= number;
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
; 0000 007D         DDRD.2=1;
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
; 0000 007E         PORTC= sevenseg[FirstDigit]+ 0b10000000;   //point on
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
; 0000 007F         delay_ms(1);
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
; 0000 0080         DDRD.2=0;
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
; 0000 0081         DDRD.1=1;
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
; 0000 0082         PORTC= sevenseg[SecondDigit];
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
; 0000 0083         delay_ms(1);
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
; 0000 0084         DDRD.1=0;
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
; 0000 0085         DDRD.0=1;
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
; 0000 0086         PORTC= sevenseg[ThirdDigit];
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
; 0000 0087         delay_ms(1);
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
; 0000 0088         DDRD.0=0;
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
; 0000 0089         DDRD.3=1;
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
; 0000 008A         PORTC= sevenseg[Deci];
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
; 0000 008B         delay_ms(1);
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
; 0000 008C         DDRD.3=0;
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
; 0000 008D         numberCopy = numberCopy - 2 ;
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
; 0000 008E 
; 0000 008F 
; 0000 0090     }
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
; 0000 0091 
; 0000 0092 
; 0000 0093 }
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;
;// question 6
;void reset7seg(void){
; 0000 0096 void reset7seg(void){
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
; 0000 0097 
; 0000 0098     unsigned int number=0;
; 0000 0099     unsigned int numberCopy=0;
; 0000 009A     unsigned int FirstDigit=0;
; 0000 009B     unsigned int SecondDigit=0;
; 0000 009C     unsigned int ThirdDigit=0;
; 0000 009D     unsigned int Deci=0;        // after point
; 0000 009E     unsigned int fib=0;
; 0000 009F     unsigned int foo=0;
; 0000 00A0     DDRA=0x00;
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;	number -> R16,R17
;	numberCopy -> R18,R19
;	FirstDigit -> R20,R21
;	SecondDigit -> Y+14
;	ThirdDigit -> Y+12
;	Deci -> Y+10
;	fib -> Y+8
;	foo -> Y+6
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
; 0000 00A1     DDRC=0xFF;
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
; 0000 00A2     DDRD=0x00;
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
; 0000 00A3     number= PINA;
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
; 0000 00A4     numberCopy = number  *10;   //FOR making decimal easier
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
; 0000 00A5     while(numberCopy>0){
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
; 0000 00A6 
; 0000 00A7         delay_ms(50);
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
; 0000 00A8         number=numberCopy;
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
; 0000 00A9         Deci=number%10;
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
; 0000 00AA         number= number /10;
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
; 0000 00AB         FirstDigit=number%10;
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
; 0000 00AC         number= number /10;
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
; 0000 00AD         SecondDigit = number %10;
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
; 0000 00AE         number= number /10;
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
; 0000 00AF         ThirdDigit= number;
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
; 0000 00B0         DDRD.2=1;
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
; 0000 00B1         PORTC= sevenseg[FirstDigit];   //point off
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
; 0000 00B2         delay_ms(1);
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
; 0000 00B3         DDRD.2=0;
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
; 0000 00B4         DDRD.1=1;
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
; 0000 00B5         PORTC= sevenseg[SecondDigit];
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
; 0000 00B6         delay_ms(1);
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
; 0000 00B7         DDRD.1=0;
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
; 0000 00B8         DDRD.0=1;
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
; 0000 00B9         PORTC= sevenseg[ThirdDigit];
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
; 0000 00BA         delay_ms(1);
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
; 0000 00BB         DDRD.0=0;
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
; 0000 00BC         DDRD.3=1;
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
; 0000 00BD         PORTC= sevenseg[Deci];
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
; 0000 00BE         delay_ms(1);
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
; 0000 00BF         DDRD.3=0;
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
; 0000 00C0         numberCopy = numberCopy - 2 ;
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
; 0000 00C1 
; 0000 00C2          if (PIND.7==0){               //reduce that number from main number in all 4 if
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
; 0000 00C3              foo= numberCopy / 10;           //fib and foo are temp
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
; 0000 00C4              foo = foo/10;
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
; 0000 00C5              foo = foo/10;
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
; 0000 00C6              fib= foo % 10;
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
; 0000 00C7              fib = fib *1000;
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
; 0000 00C8              numberCopy= numberCopy - fib;
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
; 0000 00C9              SecondDigit= 0 ;
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
; 0000 00CA              ThirdDigit= 0;
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
; 0000 00CB 
; 0000 00CC             //delay_ms(1000);
; 0000 00CD         }
; 0000 00CE         if (PIND.6==0){
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
; 0000 00CF              foo= numberCopy / 10;
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
; 0000 00D0              foo = foo/10;
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
; 0000 00D1              fib= foo % 10;
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
; 0000 00D2              fib = fib *100;
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
; 0000 00D3              numberCopy= numberCopy - fib;
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
; 0000 00D4              SecondDigit= 0 ;
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
; 0000 00D5         }
; 0000 00D6         if (PIND.5==0){
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
; 0000 00D7              foo= numberCopy / 10;
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
; 0000 00D8              fib= foo % 10;
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
; 0000 00D9              fib = fib *10;
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
; 0000 00DA              numberCopy= numberCopy - fib;
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
; 0000 00DB              FirstDigit= 0;
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
; 0000 00DC         }
; 0000 00DD         if (PIND.4==0){
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
; 0000 00DE              //delay_ms(1000);
; 0000 00DF              fib= numberCopy % 10;
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
; 0000 00E0              numberCopy= numberCopy - fib;
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
; 0000 00E1              Deci= 0;
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
; 0000 00E2 
; 0000 00E3         }
; 0000 00E4 
; 0000 00E5     }
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
; 0000 00E6 
; 0000 00E7 
; 0000 00E8 }
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;
;void main(void)
; 0000 00EB {
;PCODE: $000001E8 VOL: 0
; 0000 00EC     // Please write your application code here
; 0000 00ED     AllLedON_4Times();   // call function of question 1
;PCODE: $000001E9 VOL: 0
; 0000 00EE     DancingLight(); //call function for question 2
;PCODE: $000001EA VOL: 0
; 0000 00EF     NineToZero();      //call function for question 4
;PCODE: $000001EB VOL: 0
; 0000 00F0     while(1){
;PCODE: $000001EC VOL: 0
; 0000 00F1         DiplayPortA_onLEDs(); //  call function for question 3
;PCODE: $000001ED VOL: 0
; 0000 00F2         Reduce();   //call function for question 5
;PCODE: $000001EE VOL: 0
; 0000 00F3         reset7seg(); //call function for question 6
;PCODE: $000001EF VOL: 0
; 0000 00F4     }
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
; 0000 00F5 
; 0000 00F6 
; 0000 00F7 
; 0000 00F8 }
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
